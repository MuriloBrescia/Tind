#!/usr/bin/env python3
"""
Executador da Aplica√ß√£o Tind AI

Este script fornece uma maneira f√°cil de executar a aplica√ß√£o Tind AI a partir da raiz do projeto.
Ele lida com a configura√ß√£o de caminhos e fornece diferentes modos de execu√ß√£o.
"""

import os
import sys
import subprocess
from pathlib import Path

def main():
    """Fun√ß√£o principal do executador."""
    # Garantir que estamos na raiz do projeto
    project_root = Path(__file__).parent
    os.chdir(project_root)
    
    # Adicionar src ao caminho do Python
    src_path = project_root / "src"
    sys.path.insert(0, str(src_path))
    
    print("üöÄ Iniciando Aplica√ß√£o Tind AI...")
    print("=" * 40)
    
    # Verificar se o Flask est√° dispon√≠vel
    try:
        import flask
        print(f"‚úÖ Flask {flask.__version__} encontrado")
    except ImportError:
        print("‚ùå Flask n√£o encontrado. Instalando...")
        try:
            subprocess.check_call([sys.executable, "-m", "pip", "install", "flask", "werkzeug"])
            print("‚úÖ Flask instalado com sucesso")
        except subprocess.CalledProcessError:
            print("‚ùå Falha ao instalar Flask. Por favor, instale manualmente:")
            print("   pip install flask werkzeug")
            return 1
    
    # Importar e executar a aplica√ß√£o
    try:
        from src.app import app
        print("‚úÖ Aplica√ß√£o carregada com sucesso")
        print("üåê Iniciando servidor web...")
        print("üì± Abra seu navegador em: http://localhost:5000")
        print("‚ö†Ô∏è  Pressione Ctrl+C para parar o servidor")
        print("=" * 40)
        
        # Executar a aplica√ß√£o Flask
        app.run(host='0.0.0.0', port=5000, debug=True)
        
    except Exception as e:
        print(f"‚ùå Erro ao iniciar aplica√ß√£o: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())